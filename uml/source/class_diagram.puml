@startuml class_diagram

' Force vertical layout
left to right direction

' General styling
skinparam Padding 1
skinparam ParticipantPadding 0
skinparam ComponentPadding 0
skinparam nodesep 3
skinparam ranksep 3
skinparam class {
    BackgroundColor LightGreen
    BorderColor Black
    ArrowColor Black
}

' Core Game Managers
package "Managers" #LightYellow {
    class MyGameManager
    class PigGameManager
    class GreedGameManager
    class BalutGameManager

    class DiceManager
    class DataStoreManager
    class SettingsManager
    class ShakeDetectorManager
    class StatisticsManager
}

' Models
package "Models" #LightGray {
    class GameState
    class PlayerAnalysis
    class DecisionPatterns
    class WinRate
    class TimeMetrics
    class DiceDetectionResult
    class GameStatistics
}

' ViewModels
package "ViewModels" #LightCyan {
    class AppViewModel
    class GameViewModel
    class DetectionViewModel
}

' Data Components
package "Data Components" #LightBlue {
    interface RoboflowRepository
    class RoboflowRepositoryImpl implements RoboflowRepository
}

' Relationships with one-word labels
AppViewModel --> DataStoreManager : "Manage"
GameViewModel --> MyGameManager : "Use"
GameViewModel --> PigGameManager : "Use"
GameViewModel --> GreedGameManager : "Use"
GameViewModel --> BalutGameManager : "Use"
GameViewModel --> DiceManager : "Roll"
GameViewModel --> SettingsManager : "Access"
GameViewModel --> ShakeDetectorManager : "Detect"

DetectionViewModel --> DiceDetectionResult : "Detect"
DetectionViewModel --> RoboflowRepository : "Use"
RoboflowRepositoryImpl -> DiceDetectionResult : "Analyze"

MyGameManager -> GameState : "Manage"
PigGameManager -> GameState : "Manage"
GreedGameManager -> GameState : "Manage"
BalutGameManager -> GameState : "Manage"

' Updated relationships for statistics tracking
StatisticsManager -> DecisionPatterns : "Use"
StatisticsManager -> GameStatistics : "Track"
GameStatistics --> WinRate : "Compute"
GameStatistics --> PlayerAnalysis : "Analyze"
PlayerAnalysis --> TimeMetrics : "Measure"

@enduml
